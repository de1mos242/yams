openapi: 3.0.0
info:
  title: Yet Another Messaging System
  version: 1.0.0
paths:
  /api/users:
    get:
      summary: Returns a list of users.
      operationId: getAllUsers
      tags:
        - Users
      responses:
        200:
          description: A JSON array of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
    post:
      summary: Register a new user
      operationId: registerUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userRequest'
      responses:
        200:
          description: Successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        409:
          description: Username already exists

  /api/messages:
    get:
      summary: Get all messages by filter.
      operationId: searchMessages
      tags:
        - Messages
      parameters:
        - in: header
          name: X-CurrentUserId
          required: true
          schema:
            type: string
        - in: query
          name: userId
          description: User identifier.
          schema:
            type: integer
            format: int64
        - in: query
          required: true
          description: Search query type.
          name: searchType
          schema:
            type: string
            enum:
              - sent
              - received
              - from
      responses:
        200:
          description: A JSON array of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/message'
        403:
          description: Current user does not exists.
        404:
          description: Sender user not found for query type 'From'.
    post:
      summary: Send a message
      operationId: sendMessage
      tags:
        - Messages
      parameters:
        - in: header
          name: X-CurrentUserId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/messageRequest'
      responses:
        200:
          description: Ok
        403:
          description: Current user does not exists.
        404:
          description: Target user not found.
        409:
          description: Sender and receiver are the save user.



components:
  schemas:
    userRequest:
      properties:
        username:
          type: string
          maxLength: 100
      required:
        - username

    user:
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string

    messageRequest:
      properties:
        content:
          type: string
          maxLength: 1000
        receiverId:
          type: integer
          format: int64
      required:
        - content
        - receiverId

    message:
      properties:
        content:
          type: string
        sender:
          $ref: '#/components/schemas/user'
        receiver:
          $ref: '#/components/schemas/user'
        timestamp:
          type: string
          format: datetime
          description: Message timestamp in UTC.